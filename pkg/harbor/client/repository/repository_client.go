// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

//go:generate mockery -name API -inpkg

// API is the interface of the repository client
type API interface {
	// ListRepositories gets repositories accompany with relevant project and repo name
	// This endpoint lets user search repositories accompanying with relevant project ID and repo name. Repositories can be sorted by repo name, creation_time, update_time in either ascending or descending order.

	ListRepositories(ctx context.Context, params *ListRepositoriesParams) (*ListRepositoriesOK, error)
	// ListRepositoryTags gets tags of a relevant repository
	// This endpoint aims to retrieve tags from a relevant repository. If deployed with Notary, the signature property of response represents whether the image is singed or not. If the property is null, the image is unsigned.

	ListRepositoryTags(ctx context.Context, params *ListRepositoryTagsParams) (*ListRepositoryTagsOK, error)
}

// New creates a new repository API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry, authInfo runtime.ClientAuthInfoWriter) *Client {
	return &Client{
		transport: transport,
		formats:   formats,
		authInfo:  authInfo,
	}
}

/*
Client for repository API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
	authInfo  runtime.ClientAuthInfoWriter
}

/*
ListRepositories gets repositories accompany with relevant project and repo name

This endpoint lets user search repositories accompanying with relevant project ID and repo name. Repositories can be sorted by repo name, creation_time, update_time in either ascending or descending order.

*/
func (a *Client) ListRepositories(ctx context.Context, params *ListRepositoriesParams) (*ListRepositoriesOK, error) {

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listRepositories",
		Method:             "GET",
		PathPattern:        "/repositories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &ListRepositoriesReader{formats: a.formats},
		AuthInfo:           a.authInfo,
		Context:            ctx,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ListRepositoriesOK), nil

}

/*
ListRepositoryTags gets tags of a relevant repository

This endpoint aims to retrieve tags from a relevant repository. If deployed with Notary, the signature property of response represents whether the image is singed or not. If the property is null, the image is unsigned.

*/
func (a *Client) ListRepositoryTags(ctx context.Context, params *ListRepositoryTagsParams) (*ListRepositoryTagsOK, error) {

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listRepositoryTags",
		Method:             "GET",
		PathPattern:        "/repositories/{project_name}/{repository_name}/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &ListRepositoryTagsReader{formats: a.formats},
		AuthInfo:           a.authInfo,
		Context:            ctx,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ListRepositoryTagsOK), nil

}
