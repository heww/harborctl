// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/heww/harborctl/pkg/harbor/models"
)

// ListRepositoryTagsReader is a Reader for the ListRepositoryTags structure.
type ListRepositoryTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRepositoryTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRepositoryTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewListRepositoryTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListRepositoryTagsOK creates a ListRepositoryTagsOK with default headers values
func NewListRepositoryTagsOK() *ListRepositoryTagsOK {
	return &ListRepositoryTagsOK{}
}

/*ListRepositoryTagsOK handles this case with default header values.

Get tags successfully.
*/
type ListRepositoryTagsOK struct {
	Payload []*models.DetailedTag
}

func (o *ListRepositoryTagsOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{project_name}/{repository_name}/tags][%d] listRepositoryTagsOK  %+v", 200, o.Payload)
}

func (o *ListRepositoryTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepositoryTagsInternalServerError creates a ListRepositoryTagsInternalServerError with default headers values
func NewListRepositoryTagsInternalServerError() *ListRepositoryTagsInternalServerError {
	return &ListRepositoryTagsInternalServerError{}
}

/*ListRepositoryTagsInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type ListRepositoryTagsInternalServerError struct {
}

func (o *ListRepositoryTagsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /repositories/{project_name}/{repository_name}/tags][%d] listRepositoryTagsInternalServerError ", 500)
}

func (o *ListRepositoryTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
